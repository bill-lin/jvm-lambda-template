buildscript {
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

// add the plugins we care about
apply from: file('gradle/plugins.gradle')
// add and configure the integration test source set and tasks
apply from: file('gradle/integration.gradle')
// add the dependencies
apply from: file('gradle/dependencies.gradle')

shadowJar {
    baseName = artifactId
    classifier = null
    version = null
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// load environment specific props from env profiles
def environment = project.hasProperty('environment') ? project.'environment' : 'default'
Properties props = new Properties()
props.load(new FileInputStream("$project.rootDir/profile/"+"$environment"+".properties"))
props.each { prop ->
    project.ext.set(prop.key, prop.value)
}

// See https://github.com/fieldju/gradle-aws-sam-deployer-plugin for more information
'aws-sam-deployer' {
    region = project.region
    s3Bucket = project.s3Bucket
    s3Prefix = "${project.getName()}-artifact-uploads"
    stackName = "${project.environment}-jvm-lambda-template"
    samTemplatePath = "${project.rootDir.absolutePath}${File.separator}application.yaml"
    tokenArtifactMap = [
            '@@CODE_URI@@': "${project.buildDir.absolutePath}${File.separator}libs${File.separator}jvm-lambda-template.jar"
    ]
}